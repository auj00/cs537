syscall.c[
    extern int sys_getparentname(void);

    [SYS_getparentname] sys_getparentname,
]

syscall.h[
    #define SYS_getparentname 22
]

sysproc.c[
    int sys_getparentname(void){
        //expand function here
    }
]

user.h[
    int getparentname(char* parentbuf,char* childbuf, int parentbufsize, int childbufsize);
]

usys.S[
    SYSCALL(getparentname)
]

defs.h[
    STANDARD DEFINITIONS;
]

/*****************************************
 helper argint etc.
 *****************************************/
sysfile.c[
    argfd,
]
syscall.c[
    argint,
    argptr,
]


/*****************************************
 wmap System Call:
 addr: virtual address
 length: length of mapping in bytes
 fd: 
 flags: as defined in wmap.h
 *****************************************/
uint wmap(uint addr, int length, int flags, int fd);
{

    1. Convert length to no of pages;
    2. check in your data structure if address is assigned for starting at addr to addr + length.
    3  check conditions.
    4. check anonymous mapping or file backed mapping.
}


The maximum number of memory maps is 16.


each proc will have a struct with 16 sized address arrays,
corresponding 16 sized lengths.
